#!/usr/bin/env python
import numpy as np
from math import sqrt
from scipy.special import erf
import sympy as sp

import matplotlib.pyplot as plt

def half_space_cooling_T(z, T0, Tm,  age_in_myrs, alpha):
    myrs2sec = 86400 * 365.2425e6

    T = T0 + (Tm - T0) * erf(z /
            sqrt(4 * alpha * age_in_myrs * myrs2sec) )
    return T

def continental_radiogenic_T(z,T0,hr,k,qm,rhoH0):
    T = T0 + qm/k*z + rhoH0*hr**2/k*(1-np.exp(-z/hr))
    return T

def continental_radiogenic_T2(z,T0,hr,k,qm,rhoH0):
    T = np.zeros_like(z)    
    for i, zt in enumerate(z):
        if zt < hr:
            T[i] = T0 + qm/k*zt + rhoH0*hr**2/k*(1-np.exp(-zt/hr))
        else:
            T[i] = T0 + qm/k*hr + rhoH0*hr**2/k*(1-np.exp(-hr/hr)) + qm/k*(zt-hr)
    return T

def main():
    k_m = 3.3 # W/mK thermal conductivity
    k_c = 2.7 # W/mK thermal conductivity of crust
    rho_m = 3300 # kg/m^3 density
    rho_c = 2800 # kg/m^3 density of crust
    cp_m = 1000 # J/kgK specific heat capacity
    cp_c = 1000 # J/kgK specific heat capacity of crust
    alpha_m = k_m/rho_m/cp_m # m^2/s thermal diffusivity

    zb = 100e3 # km

    hr = 15e3 # km length_scale_for_the_decrease_of_heat_production
    H0_m = 1.2e-9 # W/kg heat production
    # 9.6e-10 W/kg for granite
    rhoH0 = rho_m * H0_m # 15e-6 # W/m^3

    T0 = 273
    Tm = 1300 + 273

    # heat flux generated by radiogenic heat production
    qh = rhoH0*hr**2*(1-np.exp(-zb/hr))/zb # W/m^3
    q = (Tm-T0)/zb*k_m
    
    qm = 30e-3 # W/m^2 heat flux from mantle
    qm = q - qh
    
    age = 26 # Myrs
    
    zmoho = 22e3 # km
    zmoho = hr

    z = np.linspace(0, zb, 1000)

    ind = z<=hr
    k_arr = np.ones_like(z)*k_m
    rho_arr = np.ones_like(z)*rho_m

    k_arr[ind] = k_c    
    rho_arr[ind] = rho_c
    
    
    hz = rhoH0*np.exp(-z/hr)
    

    tr = continental_radiogenic_T(z,T0,hr,k_m,qm,rhoH0)

    qh2 = rhoH0*hr**2*(1-np.exp(-hr/hr))/zb # W/m^3
    qm2 = q - qh2
    tr2 = continental_radiogenic_T2(z,T0,hr,k_m,qm2,rhoH0)

    th = half_space_cooling_T(z, T0, Tm, age,alpha_m)

    print(f'temperature at surface: {tr[0]-273:.0f} degC')
    print(f'temperature at moho: {np.interp(zmoho,z,tr)-273:.0f} degC')
    print(f'temperature at bottom: {tr[-1]-273:.0f} degC')
    
    
    tmoho = np.interp(zmoho,z,tr)
    tmoho2 = np.interp(zmoho,z,tr2)
    
    
    fig, ax = plt.subplots(figsize=(4,8))
    ax.plot(tr-273, z/1e3,'k',label="Radiogenic")
    ax.plot(tr2-273, z/1e3,'--b',label="Radiogenic hr")
    ax.plot(th-273, z/1e3,'r',label="Half-space cooling")
    
    ax.hlines(hr*1e-3,0,1500,ls='--',color='grey')
    ax.text(0.1,hr*1e-3+0.1,"hr",fontsize=12,color='grey')
    ax.vlines(Tm-273,0,100,ls='--',color='grey')
    ax.text(Tm-273+0.1,0.1,"Tm",fontsize=12,color='grey')

    ax.plot([tmoho-273],[zmoho*1e-3],'o',color='k')
    ax.text(tmoho-273+0.1,zmoho*1e-3,f"{tmoho-273:.0f}",fontsize=12,ha='right',va='top')
    ax.plot([tmoho2-273],[zmoho*1e-3],'o',color='b')
    ax.text(tmoho2-273+0.1,zmoho*1e-3,f"{tmoho2-273:.0f}",fontsize=12,ha='left',va='bottom',color='b')

    zAndres = 35e3
    tAndres = np.interp(zAndres,z,tr)

    ax.plot([tAndres-273],[zAndres*1e-3],'o',color='k')
    ax.text(tAndres-273+0.1,zAndres*1e-3,f"{tAndres-273:.0f}",fontsize=12,ha='left',va='bottom',color='k')


    ax2 = ax.twiny()
    
    ax2.plot(hz*1e6,z/1e3,'--',color='g',label="Heat production")
    ax2.set_xlabel(r"Heat production ($\mu$W/m3)")
    ax2.legend(loc='upper right')
    ax2.set_xlim(0,4)

    ax.legend(loc='lower left')
    ax.set_xlabel(r"Temperature ($^\circ{C}$)")
    ax.set_ylabel("Depth (km)")
    ax.set_ylim(100,0)
    ax.set_xlim(0,1500)
    ax.grid(ls='--')
    fig.tight_layout()
    fig.savefig("geotherm.png")
    
    return

if __name__ == "__main__":
    main()